id: ITpp_BER_Analyzer
label: BER_Analyzer
category: '[ITpp]'

templates:
  imports: from gnuradio import ITpp
  make: ITpp.BER_Analyzer(${Eb_N0_dB})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default

parameters:
- id: Eb_N0_dB
  label: Eb_N0_dB
  dtype: float_vector
  # default: You need to fill in your grc/ITpp_Hamming_Decoder.block.yaml

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: _N
  domain: stream
  dtype: int
  optional: false
- label: _K
  domain: stream
  dtype: int
  optional: false
- label: num_bits
  domain: stream
  dtype: int
  optional: true
- label: source
  domain: stream
  dtype: byte
  optional: false
- label: decoded0
  domain: stream
  dtype: byte
  optional: false
- label: decoded1
  domain: stream
  dtype: byte
  optional: false
#  vlen: ...

outputs:
- label: out
  domain: stream
  dtype: byte
  optional: false
#  vlen: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
